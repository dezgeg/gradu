%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Main references
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Main work. ext2/ext3, reiserfs, jfs, xfs
@article{ModelChecking,
 author = {Yang, Junfeng and Twohey, Paul and Engler, Dawson and Musuvathi, Madanlal},
 title = {Using Model Checking to Find Serious File System Errors},
 journal = {ACM Trans. Comput. Syst.},
 issue_date = {November 2006},
 volume = {24},
 number = {4},
 month = nov,
 year = {2006},
 issn = {0734-2071},
 pages = {393--423},
 numpages = {31},
 url = {http://doi.acm.org/10.1145/1189256.1189259},
 doi = {10.1145/1189256.1189259},
 acmid = {1189259},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Model checking, crash, file system, journaling, recovery},
}

% More model checking.
% http://www.cs.columbia.edu/~junfeng/09fa-e6998/papers/explode.pdf
@inproceedings{Explode,
 author = {Yang, Junfeng and Sar, Can and Engler, Dawson},
 title = {EXPLODE: A Lightweight, General System for Finding Serious Storage System Errors},
 booktitle = {Proceedings of the 7th USENIX Symposium on Operating Systems Design and Implementation - Volume 7},
 series = {OSDI '06},
 year = {2006},
 location = {Seattle, WA},
 pages = {10--10},
 numpages = {1},
 url = {http://dl.acm.org/citation.cfm?id=1267308.1267318},
 acmid = {1267318},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}

% Runtime invariant validation of ext2/3 and btrfs
% - modifies block layer & ext3/btrfs transaction commit code
@article{Recon,
 author = {Fryer, Daniel and Sun, Kuei and Mahmood, Rahat and Cheng, Tinghao and Benjamin, Shaun and Goel, Ashvin and Brown, Angela Demke},
 title = {Recon: Verifying File System Consistency at Runtime},
 journal = {Trans. Storage},
 issue_date = {November 2012},
 volume = {8},
 number = {4},
 month = dec,
 year = {2012},
 issn = {1553-3077},
 pages = {15:1--15:29},
 articleno = {15},
 numpages = {29},
 url = {http://doi.acm.org/10.1145/2385603.2385608},
 doi = {10.1145/2385603.2385608},
 acmid = {2385608},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Metadata consistency, file system checker, runtime verification},
}

% ext2 fsck described in SQL, details some ext2 invariants
% Otherwise quite bland
@inproceedings{SQCK,
 author = {Gunawi, Haryadi S. and Rajimwale, Abhishek and Arpaci-Dusseau, Andrea C. and Arpaci-Dusseau, Remzi H.},
 title = {SQCK: A Declarative File System Checker},
 booktitle = {Proceedings of the 8th USENIX Conference on Operating Systems Design and Implementation},
 series = {OSDI'08},
 year = {2008},
 location = {San Diego, California},
 pages = {131--146},
 numpages = {16},
 url = {http://dl.acm.org/citation.cfm?id=1855741.1855751},
 acmid = {1855751},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}

% btrfs, short description of copy-on-write
@article{Btrfs,
 author = {Rodeh, Ohad and Bacik, Josef and Mason, Chris},
 title = {BTRFS: The Linux B-Tree Filesystem},
 journal = {Trans. Storage},
 issue_date = {August 2013},
 volume = {9},
 number = {3},
 month = aug,
 year = {2013},
 issn = {1553-3077},
 pages = {9:1--9:32},
 articleno = {9},
 numpages = {32},
 url = {http://doi.acm.org/10.1145/2501620.2501623},
 doi = {10.1145/2501620.2501623},
 acmid = {2501623},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {B-trees, RAID, concurrency, copy-on-write, filesystem, shadowing, snapshots},
}

% Sprite Log Structured Filesystem; checkpoints & roll-forward recovery
@article{SpriteLfs,
 author = {Rosenblum, Mendel and Ousterhout, John K.},
 title = {The Design and Implementation of a Log-structured File System},
 journal = {ACM Trans. Comput. Syst.},
 issue_date = {Feb. 1992},
 volume = {10},
 number = {1},
 month = feb,
 year = {1992},
 issn = {0734-2071},
 pages = {26--52},
 numpages = {27},
 url = {http://doi.acm.org/10.1145/146941.146943},
 doi = {10.1145/146941.146943},
 acmid = {146943},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Unix, disk storage management, fast crash recovery, file system organization, file system performance, high write performance, log-structured, logging},
}

% Sprite LFS authors' Ph.D thesis
@phdthesis{SpriteSeltzerThesis,
 author = {Seltzer, Margo Ilene},
 title = {File System Performance and Transaction Support},
 year = {1992},
 note = {UMI Order No. GAX93-30724},
 publisher = {University of California at Berkeley},
 address = {Berkeley, CA, USA},
}

@phdthesis{SpriteRosenblumThesis,
    Author = {Rosenblum, Mendel},
    Title = {The Design and Implementation of a Log-structured File System},
    School = {EECS Department, University of California, Berkeley},
    Year = {1992},
    Month = {Jun},
    URL = {http://www2.eecs.berkeley.edu/Pubs/TechRpts/1992/6267.html},
    Number = {UCB/CSD-92-696},
    Abstract = {This dissertation presents a new technique for disk storage management called a log-structured file system. The technique writes all file system changes in large sequential transfers to a log-like structure on disk. The key benefit is a high write performance that is independent of the workload. The large transfers also enable the efficient use of large disk arrays such as RAIDs. The technique minimizes the overhead of computing the redundancy information required by large RAIDs.   <p>A log-structured file system achieves high write rates without sacrificing file retrieval performance. Files are read back from the log efficiently due to the indexing information that is maintained. The log structure also permits fast recovery from system crashes. Using a recovery system based on checkpoints and roll-forward the log-structured file system can quickly restore the disk to a consistent state.   <p>An important focus of this dissertation is the technique used for free space management in a log--structured file system. The approach taken was to divide the disk into large segments to which the log was written. A segment cleaner mechanism exists to compress the live information from heavily fragmented segments. The mechanism reads in the fragmented segments, compacts the live data, and writes the data back to segments on disk. The dissertation includes a series of simulations that demonstrate the efficiency of a simple segment cleaning policy based on cost and benefit. The segment cleaner decides which segments to clean based on a function of the fraction alive in the segment and the age of the data in the segment.   <p>I have implemented a prototype log-structured file system called Sprite LFS; it outperforms current Unix file systems by an order of magnitude for small-file writes and matches or exceeds Unix performance for reads and large writes. Even when the overhead for cleaning is included, Sprite LFS can use 70% of the disk bandwidth for writing. Unix file systems typically can use only 5-10%.}
}

% App / POSIX data consistency
@inproceedings{PosixDataConsistency,
 author = {Pillai, Thanumalayan Sankaranarayana and Chidambaram, Vijay and Alagappan, Ramnatthan and Al-Kiswany, Samer and Arpaci-Dusseau, Andrea C. and Arpaci-Dusseau, Remzi H.},
 title = {All File Systems Are Not Created Equal: On the Complexity of Crafting Crash-consistent Applications},
 booktitle = {Proceedings of the 11th USENIX Conference on Operating Systems Design and Implementation},
 series = {OSDI'14},
 year = {2014},
 isbn = {978-1-931971-16-4},
 location = {Broomfield, CO},
 pages = {433--448},
 numpages = {16},
 url = {http://dl.acm.org/citation.cfm?id=2685048.2685082},
 acmid = {2685082},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}

% Among journaling and soft updates, also log-structured stuff. Good intro to metadata consistency.
@inproceedings{JournalVsSoftUpdates,
 author = {Seltzer, Margo I. and Ganger, Gregory R. and McKusick, M. Kirk and Smith, Keith A. and Soules, Craig A. N. and Stein, Christopher A.},
 title = {Journaling Versus Soft Updates: Asynchronous Meta-data Protection in File Systems},
 booktitle = {Proceedings of the Annual Conference on USENIX Annual Technical Conference},
 series = {ATEC '00},
 year = {2000},
 location = {San Diego, California},
 pages = {6--6},
 numpages = {1},
 url = {http://dl.acm.org/citation.cfm?id=1267724.1267730},
 acmid = {1267730},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}

% Ext2 details
% See also: https://github.com/torvalds/linux/blob/v4.14/fs/ext2/ext2.h
@article{Ext2Design,
 booktitle = {Proceedings to the First Dutch International Symposium on Linux},
 title = {Design and Implementation of the Second Extended Filesystem},
 author = {Card, R{\'e}my and Tsâ€™o, Theodore and Tweedie, Stephen},
 journal = {},
 isbn = {90-367-0385-9},
 publisher = {University of Groningen},
 year = {1995},
 url = {http://web.mit.edu/tytso/www/linux/ext2intro.html},
}

@article{Ext2Korner,
 author = {Appleton, Randy},
 title = {Kernel Korner: A Non-Technical Look Inside the EXT2 File System},
 journal = {Linux J.},
 issue_date = {Aug. 1997},
 volume = {1997},
 number = {40es},
 month = aug,
 year = {1997},
 issn = {1075-3583},
 articleno = {19},
 url = {http://dl.acm.org/citation.cfm?id=326911.326931},
 acmid = {326931},
 publisher = {Belltown Media},
 address = {Houston, TX},
}

% Useful misc. information on ext2
@inproceedings{Ext2Plans,
 author = {Ts'o, Theodore Y. and Tweedie, Stephen},
 title = {Planned Extensions to the Linux Ext2/Ext3 Filesystem},
 booktitle = {Proceedings of the FREENIX Track: 2002 USENIX Annual Technical Conference},
 year = {2002},
 isbn = {1-880446-01-4},
 pages = {235--243},
 numpages = {9},
 url = {http://dl.acm.org/citation.cfm?id=647056.715922},
 acmid = {715922},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}

% Description of Ext2 journaling
% - Long recovery time of non-journalled fs.
% - Mentions internal invariants & caching
%    - "The layout of data on disk (or alternatively, perhaps, its network protocol, if the filesystem is not local), details of internal caching,
        and the algorithms used to schedule disk IO - these are all things which can be changed without necessarily violating the specification of
        the filesystem's application interface."
% - Mentions Fast Filesystem as a synchronous Unix filesystem variant
% - Mentions recovery constructs such as preserving (ext2 has), predictability & atomicity (which ext2 doesn't)
% - Easy to extend existing ext2
% - Simply record metadata blocks to journal, wrap around when needed
% - Only once journal safely committed, writing to actual blocks can start
% - Concept of transaction and some ordering dependencies
%   - Relative to database transactions, short-lived & never need to abort
% Interesting related presentation: https://www.linuxfoundation.jp/jp_uploads/seminar20060911/Ted_Tso.pdf
@inproceedings{Ext2Journal,
 author = {Stephen C. Tweedie},
 title = {Journaling the Linux ext2fs Filesystem},
 booktitle = {In LinuxExpoâ€™98: Proceedings of The 4th Annual Linux Expo},
 year = {1998},
}

@inproceedings{Ext4Status,
  title={The new ext4 filesystem: current status and future plans},
  author={Mathur, Avantika and Cao, Mingming and Bhattacharya, Suparna and Dilger, Andreas and Tomas, Alex and Vivier, Laurent},
  booktitle={Proceedings of the Linux symposium},
  volume={2},
  pages={21--33},
  year={2007}
}

@article{SoftUpdates2000,
 author = {Ganger, Gregory R. and McKusick, Marshall Kirk and Soules, Craig A. N. and Patt, Yale N.},
 title = {Soft Updates: A Solution to the Metadata Update Problem in File Systems},
 journal = {ACM Trans. Comput. Syst.},
 issue_date = {May 2000},
 volume = {18},
 number = {2},
 month = may,
 year = {2000},
 issn = {0734-2071},
 pages = {127--153},
 numpages = {27},
 url = {http://doi.acm.org/10.1145/350853.350863},
 doi = {10.1145/350853.350863},
 acmid = {350863},
 publisher = {ACM},
 address = {New York, NY, USA},
}

% - Lists update dependencies for Berkeley Fast File System
@inproceedings{SoftUpdatesFfs,
 author = {McKusick, Marshall Kirk and Ganger, Gregory R.},
 title = {Soft Updates: A Technique for Eliminating Most Synchronous Writes in the Fast Filesystem},
 booktitle = {Proceedings of the Annual Conference on USENIX Annual Technical Conference},
 series = {ATEC '99},
 year = {1999},
 location = {Monterey, California},
 pages = {24--24},
 numpages = {1},
 url = {http://dl.acm.org/citation.cfm?id=1268708.1268732},
 acmid = {1268732},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}

% Documents gedit fsync() dance
@inproceedings{OptimisticCrashConsistency,
 author = {Chidambaram, Vijay and Pillai, Thanumalayan Sankaranarayana and Arpaci-Dusseau, Andrea C. and Arpaci-Dusseau, Remzi H.},
 title = {Optimistic Crash Consistency},
 booktitle = {Proceedings of the Twenty-Fourth ACM Symposium on Operating Systems Principles},
 series = {SOSP '13},
 year = {2013},
 isbn = {978-1-4503-2388-8},
 location = {Farminton, Pennsylvania},
 pages = {228--243},
 numpages = {16},
 url = {http://doi.acm.org/10.1145/2517349.2522726},
 doi = {10.1145/2517349.2522726},
 acmid = {2522726},
 publisher = {ACM},
 address = {New York, NY, USA},
}



% Alternative approach to journaling/etc.
@inproceedings{ConsistencyWithoutOrdering,
 author = {Chidambaram, Vijay and Sharma, Tushar and Arpaci-Dusseau, Andrea C. and Arpaci-Dusseau, Remzi H.},
 title = {Consistency Without Ordering},
 booktitle = {Proceedings of the 10th USENIX Conference on File and Storage Technologies},
 series = {FAST'12},
 year = {2012},
 location = {San Jose, CA},
 pages = {9--9},
 numpages = {1},
 url = {http://dl.acm.org/citation.cfm?id=2208461.2208470},
 acmid = {2208470},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Aux references
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% POSIX spec.
@book{PosixSpec,
 author = {IEEE},
 title = {IEEE Std 1003.1-2017, IEEE Standard for Information Technology --- Portable Operating System Interface (POSIX) Base Definitions, Issue 7},
 publisher = {IEEE},
 address = {New York, NY, USA},
 year = {2018},
 ISBN = {978-1-5044-4542-9},
}

@misc{PosixLinuxCompat,
 author = {Douglass C. Locke},
 title = {POSIX and Linux Application Compatibility Design Rules},
 url = {https://collaboration.opengroup.org/platform/single_unix_specification/documents.php?action=show\&dcat=\&gdid=13450},
 month = {12},
 year = {2006},
 institution = {The Open Group},
 note = {Draft, Version 1.0},
}

% Original UNIX paper from Ken and Dennis
@article{UnixPaper,
 author = {Ritchie, Dennis M. and Thompson, Ken},
 title = {The UNIX Time-sharing System},
 journal = {Commun. ACM},
 issue_date = {July 1974},
 volume = {17},
 number = {7},
 month = jul,
 year = {1974},
 issn = {0001-0782},
 pages = {365--375},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/361011.361061},
 doi = {10.1145/361011.361061},
 acmid = {361061},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {PDP-11, command language, file system, operating system, time-sharing},
}

% Hopefully describes BSD buffer cache
@book{Bsd44Book,
 author = {McKusick, Marshall Kirk and Bostic, Keith and Karels, Michael J. and Quarterman, John S.},
 title = {The Design and Implementation of the 4.4BSD Operating System},
 year = {1996},
 isbn = {0-201-54979-4},
 publisher = {Addison Wesley Longman Publishing Co., Inc.},
 address = {Redwood City, CA, USA},
}

% BeFS book.
%  - Seems to have better explanations of very basic concepts.
%  - Filesystem hierarchies.
%  - BeFS buffer cache
@book{BefsBook,
 author = {Giampaolo, Dominic},
 title = {Practical File System Design with the Be File System},
 year = {1998},
 isbn = {1558604979},
 edition = {1st},
 publisher = {Morgan Kaufmann Publishers Inc.},
 address = {San Francisco, CA, USA},
}

% - For some basics, like open() etc. calls.
% - Unix/POSIX history.
@book{UnixFsBook,
 author = {Steve D. Pate},
 title = {UNIX Filesystems: Evolution, Design, and Implementation},
 year = {2003},
 isbn = {0-471-16483-6},
 edition = {1st},
 publisher = {Wiley Publishing, Inc.},
 address = {Indianapolis, Indiana, USA},
}

@book{LinuxKernelBook,
  title={Understanding the Linux Kernel: from I/O ports to process management},
  author={Bovet, Daniel P and Cesati, Marco},
  year={2005},
  publisher={O'Reilly Media, Inc.}
}

@book{UnixHistoryBook,
 author = {Salus, Peter H.},
 title = {A Quarter Century of UNIX},
 year = {1994},
 isbn = {0-201-54777-5},
 publisher = {ACM Press/Addison-Wesley Publishing Co.},
 address = {New York, NY, USA},
}

@book{DatabaseFundamentals,
 author = {Elmasri, Ramez and Navathe, Shamkant},
 title = {Fundamentals of Database Systems},
 year = {2010},
 isbn = {0136086209, 9780136086208},
 edition = {6th},
 publisher = {Addison-Wesley Publishing Company},
 address = {USA},
}

@article{AriesWal,
 author = {Mohan, C. and Haderle, Don and Lindsay, Bruce and Pirahesh, Hamid and Schwarz, Peter},
 title = {ARIES: A Transaction Recovery Method Supporting Fine-granularity Locking and Partial Rollbacks Using Write-ahead Logging},
 journal = {ACM Trans. Database Syst.},
 issue_date = {March 1992},
 volume = {17},
 number = {1},
 month = mar,
 year = {1992},
 issn = {0362-5915},
 pages = {94--162},
 numpages = {69},
 url = {http://doi.acm.org/10.1145/128765.128770},
 doi = {10.1145/128765.128770},
 acmid = {128770},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {buffer management, latching, locking, space management, write-ahead logging},
}

@inproceedings{JournalingAnalysis,
 author = {Prabhakaran, Vijayan and Arpaci-Dusseau, Andrea C. and Arpaci-Dusseau, Remzi H.},
 title = {Analysis and Evolution of Journaling File Systems},
 booktitle = {Proceedings of the Annual Conference on USENIX Annual Technical Conference},
 series = {ATEC '05},
 year = {2005},
 location = {Anaheim, CA},
 pages = {8--8},
 numpages = {1},
 url = {http://dl.acm.org/citation.cfm?id=1247360.1247368},
 acmid = {1247368},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}

@inproceedings{SqliteAnalysis,
 author={T. Q. Dam and S. Cheon and Y. Won},
 booktitle={2016 IEEE/ACM International Conference on Mobile Software Engineering and Systems (MOBILESoft)},
 title={On the IO Characteristics of the SQLite Transactions},
 year={2016},
 volume={},
 number={},
 pages={214-224},
 keywords={Android (operating system);SQL;database management systems;input-output programs;pattern matching;smart phones;Android platform;EXT4 filesystem journaling;IO characteristics;SQLite DBMS;SQLite journaling;SQLite transactions;pattern matching;smartphones;Databases;Delays;Metadata;Mobile communication;Pattern matching;Smart phones;Synchronization;Android;EXT4;IO Stack;Measurement;Real-time IO Characteristics;SQLite},
 doi={10.1109/MobileSoft.2016.047},
 ISSN={},
 month={May},
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Not used
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Ubifs, in case we ever need to refer to non-block filesystems.
@inproceedings{Ubifs,
author="Schierl, Andreas
and Schellhorn, Gerhard
and Haneberg, Dominik
and Reif, Wolfgang",
editor="Cavalcanti, Ana
and Dams, Dennis R.",
title="Abstract Specification of the UBIFS File System for Flash Memory",
booktitle="FM 2009: Formal Methods",
year="2009",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="190--206",
abstract="Today we see an increasing demand for flash memory because it has certain advantages like resistance against kinetic shock. However, reliable data storage also requires a specialized file system knowing and handling the limitations of flash memory. This paper develops a formal, abstract model for the UBIFS flash file system, which has recently been included in the Linux kernel. We develop formal specifications for the core components of the file system: the inode-based file store, the flash index, its cached copy in the RAM and the journal to save the differences. Based on these data structures we give an abstract specification of the interface operations of UBIFS and prove some of the most important properties using the interactive verification system KIV.",
isbn="978-3-642-05089-3"
}


% https://people.eecs.berkeley.edu/~brewer/cs262/FFS.pdf / A Fast File System for UNIX
%   - details performance of cylinder groups etc. but no power-off safety mentioned

% https://people.eecs.berkeley.edu/~brewer/cs262/FFS.pdf
%   - http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.38.1460
%   - Fsck - The UNIX File System Check Program (1994)

% https://www.usenix.org/legacy/publications/library/proceedings/sd93/seltzer.pdf / An implementation of a log-structured file system for UNIX
%   - very little on recovery & verification, sadly

%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% To do
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% http://dl.acm.org.libproxy.helsinki.fi/citation.cfm?id=2626407 / Towards Efficient, Portable Application-Level Consistency

% http://cseweb.ucsd.edu/~swanson/papers/FAST2016NOVA.pdf - NOVA: A Log-structured File System for Hybrid Volatile/Non-volatile Main Memories
% - Juicy pointers like rename-needs-to-be-atomic and existing fs:s assume sector updates are atomic
